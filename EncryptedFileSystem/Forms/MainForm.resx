<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 20</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAS
        FwAAAk1TRnQBSQFMAgEBBwEAARgBAAEYAQABEgEAARIBAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFI
        AwABJAMAAQEBAAEYBQABYAEeGwAD5QOrHq8DpgP5DAAB6wHcAcAB3wG7AXYB3wG7AXYB3wG7AXYB3wG7
        AXYB3wG7AXYB3wG7AXYB3wG7AXYB3wG7AXYB3wG7AXYB3wG7AXYB3wG7AXYB3wG7AXYB7gHkAdF4AAOp
        AwAb/wMAA/wDuAwAAeMBxgGSAfEB6QHbAfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1
        AfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1Ae0B4QHLAegB0wGteAADrwP3GLED0AMAA/8DsAwAAeYBzwGl
        AfYB8wHtHgAB8AHpAdsB6AHTAa0eAAHVAbsBlAGpAaABllQAA68D9xuvA+MD/wOwBgAB7AHhAcsB4QG/
        AYAB4QG/AYAB4QG/AYAB4QG/AYAB4QG/AYAB4QG/AYAB4QG/AYAB4QG/AYAB4QG/AYAB9gH0Ae8JAAHw
        AekB2wHoAdMBrR4AAdUBuAGWAdwBewEAAWYBMwEAA/5OAAOvA/sM2gPyDwAD/wOwBgAB6AHTAa0B2gGj
        ATwB5AHJAZcB3AGpAUoB4gHEAY0B3AGtAVcB4gHCAYcB3gG1AWoB3gGzAWYB3gGyAWAB5wHSAawJAAHw
        AekB2wHoAdMBrR4AAdcBvAGXAeQBlQEAAdcBfgEAAWUBMgEAA/BLAAOvA/0M7gP4DwAD/wOwBgAB6AHT
        Aa0B3AGqAU8B4QG/AYEB6QHZAboB4AG7AXgB5wHSAawB4gHDAYoB3AGqAVEB7wHnAdgB2QGhAToB3AGo
        AUkD/gYAAfAB6QHbAegB0wGtAwAD+QFsATcBAAFtATcBAAFtATcBAAFtATgBAAFuATgBAAFuATgBAAFv
        ATgBAAFvATkBAAGvAWcBAAHmAZsBAAHiAZMBAAHSAX0BAAHYAYgBAAG6AbYBsUgAA68D9xKvA7IJAAP/
        A7AGAAHoAdMBrQHaAaQBQwHmAc4BowHdAbQBZgHkAckBmQHeAbYBbgHkAcoBmAHhAb0BfgHiAcMBjAHe
        AbMBZAHZAZ0BLwHxAesB4AYAAfAB6QHbAegB0wGtAwAByAG3AaUBuwFiAQABwgFqAQABxwFwAQABzAF2
        AQAB0QF8AQAB1QGBAQAB2AGFAQAB2wGLAQAB4QGRAQAB4wGWAQAB4gGTAQAB3QGKAQABzgF5AQABtAFg
        AQABZgEzAQAD/kIAA68D9xuvA70D/wOwBgAB6QHWAbQB2wGlAUIB2wGlAUIB2wGlAUIB2wGlAUIB2wGl
        AUIB2wGlAUIB2wGlAUIB2wGlAUIB2wGlAUIB2wGlAUIB5AHLAZ0GAAHwAekB2wHoAdMBrQMAAcsBuAGl
        AcoBaQEAAdEBcAEAAdQBdgEAAdcBfAEAAdoBggEAAdwBhgEAAd4BigEAAeABjQEAAeABjgEAAeABjgEA
        Ad8BiwEAAd0BhwEAAdgBfwEAAcsBcwEAAa8BXgEAAWUBMwEAA/I/AAOvIQAD/wOwDAAB6wHdAcIB+AH2
        AfMeAAHwAekB2wHoAdMBrQMAAcsBuAGlAckBaQEGAdABbwEGAdMBdAEGAdUBeQEGAdcBfgEGAdkBggEG
        AdsBhQEGAdwBhwEGAd0BiAEGAdwBhwEGAdsBhgEGAdoBgwEGAdgBfwEGAdQBeQEGAccBbgEGAaYBWAEG
        AbcBYAEFOQAD/AMAA68DAAP8AwAP/wkAA/8DsAwAAeMBxgGSAfUB8QHrA/4B/QL8Af0C/AH9AvwB/QL8
        Af0C/AH9AvwB/QL8BgAB8AHpAdsB6AHTAa0DAAHKAbcBpQHgAakBcgHjAawBcgHkAa4BcgHlAa8BcgHn
        AbIBcgHoAbQBcgHoAbUBcgHpAbcBcgHpAbcBcgHpAbcBcgHoAbUBcgHoAbQBcgHnAbMBcgHjAa8BcgHZ
        AacBcgP5PAADsgPFA+YDsAPHAwADzAP7A7kD1QPcA/oGAAP/A7AMAAHjAcYBkgH1AfEB6wHxAesB3wHm
        Ac0BoQHmAc0BoQHmAc0BoQHmAc0BoQHmAc0BoQHmAc0BoQHmAc4BowP/AwAB8AHpAdsB6AHTAa0DAAHI
        AbYBpQHjAbQBhAHlAbUBhAHlAbYBhAHmAbcBhAHnAbkBhAHoAboBhAHoAbsBhAHpAbwBhAHpAbwBhAHq
        AbwBhAHqAbwBhAHpAbsBhAHkAbcBhAHaAbEBhAP/PwADrwMAA08DAAPHAwADywMAA5gD8wPcA/oGAAP/
        A7AMAAHjAcYBkgH1AfEB6wHwAekB2wHjAcYBkgHjAcYBkgHjAcYBkgHjAcYBkgHjAcYBkgHjAcYBkgHj
        AcYBkgHjAcYBkgHzAe8B5wHwAekB2wHoAdMBrQMAAewB6AHkAdgByAG4AdgByAG4AdgByAG4AdkByQG4
        AdgByAG3AdgByAG3AdkByQG3AdoByQG3AcoBkwFdAesBwwGWAeoBwgGWAeUBvwGWAd0BvgGeRQADrwkA
        A8cD9QPTA+wD9QPsA9UD4gYAA/8DsAwAAeMBxgGSAfUB8QHrHgAB8AHpAdsB6AHTAa0eAAHLAa8BlgHq
        AckBpgHmAcYBpgH3AvZIAAOvCQADxxUAA/YG2QOwDAAB4wHGAZIB9QHxAesVAAH1AfIB7AHvAeYB1QHv
        AeYB1QHmAdEBqQHqAdoBvh4AAcUBrAGWAeUBzAGzA/9LAAOvCQADxxIAA/wDnAPtA3oD8wwAAeMBxgGS
        AfUB8QHrFQAB5wHSAawB2QGdAS8B2QGdAS8B5AHIAZYD/h4AAcQBsAGcUQADrwkAA8cSAAPyA9MDqwPw
        DwAB4wHGAZIB9QHxAesVAAHnAdIBrAHZAZ0BLwHkAckBlwP+dQADrwkAA8cS8QPeA1kD7BIAAeMBxgGS
        AfEB6QHbAfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1AfkB9wH1AeYBzAGdAeQByAGW
        A/54AAPJCVkD1xXVA/AVAAHrAdwBwAHfAbsBdgHfAbsBdgHfAbsBdgHfAbsBdgHfAbsBdgHfAbsBdgHf
        AbsBdgHfAbsBdgHnAc8BpwP+tAAB3AHdAfUBswG4AfQBtAG4AfQBtAG4AfQBtAG4AfQBtAG4AfQBtAG4
        AfQBtAG4AfQBtAG4AfQBtAG4AfQBtAG4AfQBtAG4AfQBswG4AfQB3AHdAfVIAAP/A+EDlAOJBosDiQOU
        A+ED/wwAA/kB5wHqAfAB5gHqAfAB5gHrAfAB5gHrAfAB5gHrAfAB5QHsAfAB5QHsAfAB5QHsAfAB5QHt
        AfAB5QHtAfAB5AHuAfEB5AHuAfEB5AHvAfEB5AHvAfEB4wHwAfEB4wHwAfEB+AL5AwAD/gGvAbUB8yQA
        Aa8BtQHzA/5CAAPyA38DxwP8DAAD/APHA38D8gkAAYoBrQHrAUABhQHyAT0BiQHzAToBjwHzATcBlAH0
        ATQBmwH1ATEBogH1AS0BqQH2ASkBsAH3ASUBuAH4ASEBvwH4AR0BxwH5ARkB0AH6ARQB2AH7ARAB4QH8
        AQsB6gH9AQYB8wH+AWMB8AHyAwAC/QH+AboBvwHzJAABugG/AfMC/QH+PwAD5gOIA/sYAAP7A4gD5gYA
        AWwBmgHsAUABhQHyAT0BiQHzAToBjwHzATcBlAH0ATQBmwH1ATEBogH1AS0BqQH2ASkBsAH3ASUBuAH4
        ASEBvwH4AR0BxwH5ARkB0AH6ARQB2AH7ARAB4QH8AQsB6gH9AQYB8wH+ATgB8wH2AwAC/QH+AboBvwHz
        AwAC+gH8AecB6AH2GwABugG/AfMC/QH+BgAD/ir6A/4GAAPyA4gD/h4AA/4DiAPyAwABbAGaAewBQAGF
        AfIBPQGJAfMBOgGPAfMBNwGUAfQBNAGbAfUBMQGiAfUBLQGpAfYBKQGwAfcBJQG4AfgBIQG/AfgBHQHH
        AfkBGQHQAfoBFAHYAfsBEAHhAfwBCwHqAf0BBgHzAf4BOAHzAfYDAAL9Af4BugG/AfMDAAHtAe4B+AF5
        AYQB9gHPAdIB9BgAAboBvwHzAv0B/gMAA+cDTwN4JHsDeANPA+cD/wN/A/skAAP7A38D/wFsAZoB7AFA
        AYQB8QE9AYgB8gE6AY4B8gE3AZMB8wE0AZoB9AExAaEB9AEtAagB9QEpAa8B9gElAbcB9wEhAb4B9wEd
        AcYB+AEZAc8B+QEUAdcB+gEQAeAB+wELAekB/AEGAfIB/QE4AfIB9QMAAv0B/gG6Ab8B8wYAAesB7AH3
        AX4BiAH3AfEB8gH4CQAD/wL3AfoD/gMAAboBvwHzAv0B/gMAA1UD+SoAA/kDVQPiA8cqAAPHA+IBawGa
        AeoBPwGDAe8BPAGHAfABOQGNAfABNgGSAfEBMwGZAfIBMAGgAfIBLAGnAfMBKQGuAfQBJQG2AfUBIQG9
        AfUBHQHFAfYBGQHOAfcBFAHVAfgBEAHeAfkBCwHnAfoBBgHwAfsBOAHxAfQDAAL9Af4BugG/AfMJAAL7
        AfwBdgGBAfcByAHMAfQBwgHGAfQBugG+AfMBZwF0AfgBkgGaAfUB3gHgAfUDAAG6Ab8B8wL9Af4DAANb
        AwAD+AOKA20DvQMAA58MAAO9A20DbAO5AwADWwOUA/wDAAP1BgAG+wMAA/gD+wMAA+4D5AP7AwAD/AOU
        AWsBmAHpAT8BggHtATwBhgHuATkBjAHuATYBkQHvATMBmAHwATABnwHwASwBpgHxASgBrQHyASQBtAHz
        ASABuwHzARwBwwH0ARkBzAH1ARQB1AH2ARAB3QH3AQsB5QH4AQYB7gH5ATgB7wHyAwAC/QH+AboBvwHz
        DAABxAHIAfQB8QHyAfgBogGpAfQB6AHpAfYC8wH5AfMB9AH5A/8DAAG6Ab8B8wL9Af4DAANcAwADnQPh
        A/wDgwPvA1sJAAPvA4YD/APyA4kDAANcA4kGAAOFBgAD2APZA/oDowPZA7oDtwPRA4sGAAOJAWoBmAHo
        AT4BgQHrATsBhQHsATgBiwHsATYBkAHtATMBlwHuATABngHuASwBpAHvASgBqwHwASQBswHxASABugHx
        ARwBwgHyARgBygHzARMB0gH0ARAB2wH1AQsB5AH2AQYB7AH3ATgB7gHwAwAC/QH+AboBvwHzDAAC/AH9
        AWYBcQH4AeEB4gH1DwABugG/AfMC/QH+AwADXAMAA8wD+gMAA68D5QNAA80D0wP7A+UDrwPkA7wDiQMA
        A1wDiwYAA48D2wP0BtsDsAOfA8QDpQMAA+ADjwYAA4sBagGWAecBPgGAAeoBOwGEAesBOAGKAesBNQGP
        AewBMgGWAewBLwGcAewBKwGjAe0BKAGqAe4BJAGxAe8BIAG4Ae8BHAHAAfABGAHJAfEBEwHRAfIBDwHZ
        AfMBCwHiAfQBBgHqAfUBOAHtAe8DAAL9Af4BugG/AfMPAAF5AYQB9gP/DwABugG/AfMC/QH+AwADXAwA
        A68D5QNAA80DwwNwA+UDrwPkA80D5gMAA1wDiwYAA5MD2gOUA9EDkQO7A9sDxAOkAwAD3gPhBgADiwFq
        AZYB5QE9AX8B6AE6AYMB6QE4AYkB6QE1AY4B6gEyAZQB6wEvAZsB6wErAaIB7AEnAagB7AEjAbAB7QEg
        AbcB7QEcAb8B7gEYAccB7wETAc8B8AEPAdcB8QELAeAB8gEGAekB8wE4AeoB7gMAAv0B/gG6Ab8B8wwA
        Av0B/gFvAXsB+AL7AfwPAAG6Ab4B8wP+AwADXAwAA68D5QNYA/0D+QNWA+8DhgP8A/0D/gMAA1wDiQYA
        A44DwQOPA9EDnQP8A9gD2QO7A7QDzAO8BgADiQFqAZUB5AE9AX4B5gE6AYIB5wE3AYgB5wE0AY0B6AEx
        AZMB6QEuAZoB6QErAaAB6gEnAacB6wEjAa8B7AEfAbYB7AEcAb0B7QEYAcUB7QETAc0B7gEPAdYB7wEK
        Ad4B8AEGAecB8QE4AeoB7AMAAv0B/gG6Ab8B8wwAAvoB+wGHAZEB9gL3AfoMAAL7AfwBpQGqAfQGAANb
        DAADzwPuA3cDbAN1A+UDAAO9A20DbAO5AwADWwOUA/wDAAPyA+4D/AP7A/kDAAP6A/sDAAPuA+QD/QMA
        A/wDlAFoAZQB4wE8AX0B5AE5AYEB5QE3AYcB5QE0AYwB5gExAZIB5wEuAZkB5wEqAZ8B6AEnAaYB6QEj
        Aa0B6gEfAbQB6gEbAbwB6wEYAcQB7AETAcwB7QEPAdQB7QEKAdwB7gEGAeUB7wE4AegB6gMAAv0B/gG6
        Ab8B8w8AAfIB8wH5DAAC+wH8AaIBpwHzAvsB/AYAA1UD+SoAA/kDVQPhA8cqAAPHA+EBcAGaAeUBRgGF
        AekBQwGJAeoBQQGOAeoBPgGTAesBOwGaAewBOQGgAewBNQGmAe0BMQGtAe4BLgG0Ae8BKgG7Ae8BJwHC
        AfABIwHKAfEBHwHSAfIBGwHaAfMBFgHiAfQBEgHqAfUBfwHuAe8DAAL9Af4BugG/AfMbAAL7AfwBogGn
        AfMC+wH8CQAD5wNPA3gkewN4A08D5wP/A38D+yQAA/sDfwP/AXwBpQHsAVUBkgHzAVIBlgH0AVABmwH0
        AU0BoAH1AUoBpgH2AUgBrAH2AegB7wHzAfYB+AH5AfYB+AH5AfYB+AH5AfYB+AH5AfYC+QH2AvkB9gL5
        AfYC+QH2AvkB/QL+AwAC/QH+AboBvwHzGAAC+wH8AaIBpwHzAvsB/A8AA/4q+gP+BgAD8gOIA/4eAAP+
        A4gD8gMAAdUB3wHwAZABtQHuAZABuAHuAY0BuwHuAYwBvQHvAYoBwAHwAa4B0wHvA/4hAAL9Af4BugG/
        AfMVAAL7AfwBogGnAfMC+wH8SwAD5gOIA/sYAAP7A4gD5gkAEv8kAAP+Aa8BtQHzEgAC+wH8AaIBpwHz
        AvsB/FEAA/IDfwPHA/wMAAP8A8gDfwPyRQAB3AHdAfUBswG4AfQBtAG4AfQBtAG4AfQBtAG4AfQBtAG4
        AfQBtAG4AfQBtQG6AfMC+wH8VwAD/wPhA5QDiQaLA4kDlAPhA/8MAAFCAU0BPgcAAT4DAAEoAwABSAMA
        ASQDAAEBAQABAQUAAbABARYAA/8BAAHgAQABeAEAAR8B/wH8BQAB6AECAXgBAAEfAf8B/AUAAeABAgF5
        Af8BnwH5AfwFAAHgAQABYAEDAZ8B+AF8BQAB4AE+AWABAwGfAfgBPAUAAeABPgFgAQEBkAEAARwFAAHg
        AQ4BYAEBAZABAAEEBQAB4AEAAWABAQGQBwAB7wH+AXkB/wGQBwABqgEOAXgBAQGQAQABBAUAAYIBBgF4
        AQABkAEAAQwFAAGCAYYBeAEAARABAAE8BQABgAEGAXkB/wGfAfgBfAUAAYMB+AF5AfwBHwH4AfwFAAGD
        AfABeQH8AR8B+wH8BQABgwHwAfkB/AE/Af8B/AUAAYABAQH4AQABfwH/AfwFAAGAAQMB+AEAAv8B/AUA
        Av8B8AEAAT8C/wHAAQ8FAAEnAf8BnwL/AocFAAEnAf8BnwL/AR8B4wUAASQB/wGYAQABBgE/AfEFAAEk
        AX8BkAIAAX8B+AUAASYBOAGTAf8B8AH/AfwFAAEnAQABlAEvAQgBsgFEBQABJwGAAZQBDgEJAbABBgUA
        AScBjwGUAYABCQGAASYFAAEnAc8BlwGAAQkBgAEmBQABJwGPAZcBgAEJAYABBgUAAScBjwE3AYEBCAGC
        AUQFAAEnAd4BMwH/AfAB/wH8BQABJwH8AXACAAF/AfgFAAEnAvgBAAEGAT8B8QQAAf8B5wHxA/8BHwHj
        AwABgQH/AecB4wP/AocDAAL/AfABBwP/AcABDwMACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>